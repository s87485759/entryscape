{
  "templates": [
    {
      "type": "text",
      "id": "tf:transformType",
      "nodetype": "ONLY_LITERAL",
      "property": "http://entrystore.org/terms/transformType",
      "label": {
        "en": "Transform type"
      },
      "description": {
        "en": "A string indicating the type of transform, e.g. 'tabular'."
      },
      "cardinality": {
        "min": 1,
        "pref": 1,
        "max": 1
      }
    },
    {
      "type": "text",
      "nodetype": "DATATYPE_LITERAL",
      "property": "http://entrystore.org/terms/transformPriority",
      "label": {
        "en": "Transform priority"
      },
      "description": {
        "en": "The priority is used to order transforms in a pipeline."
      },
      "cardinality": {
        "min": 1,
        "pref": 1,
        "max": 1
      },
      "id": "tf:transformPriority",
      "datatype": "http://www.w3.org/2001/XMLSchema#integer"
    },
    {
      "type": "group",
      "id": "tf:transform",
      "nodetype": "RESOURCE",
      "property": "http://entrystore.org/terms/transform",
      "constraints": {
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": "http://entrystore.org/terms/Transform"
      },
      "label": {
        "": "Transform"
      },
      "description": {},
      "cardinality": {
        "min": 1,
        "pref": 1
      },
      "content": [
        {
          "id": "tf:transformType"
        },
        {
          "id": "tf:transformPriority"
        },
        {
          "id": "tr:transformArgument"
        }
      ]
    },
    {
      "type": "text",
      "nodetype": "ONLY_LITERAL",
      "property": "http://entrystore.org/terms/transformArgumentKey",
      "label": {
        "en": "Key"
      },
      "description": {
        "en": "This is the transform argument key, examples include 'tarqlstring' for the tabular transformType and 'baseuri' and 'dataset' for the pcaxis transformType."
      },
      "cardinality": {
        "min": 1,
        "pref": 1,
        "max": 1
      },
      "id": "tr:transformArgumentKey",
      "styles": [
        "multiline"
      ]
    },
    {
      "type": "group",
      "id": "tr:Pipeline",
      "nodetype": "RESOURCE",
      "constraints": {
        "http://www.w3.org/1999/02/22-rdf-syntax-ns#type": "http://entrystore.org/terms/Pipeline"
      },
      "label": {
        "en": "Pipeline"
      },
      "description": {
        "en": "A pipeline consists of one or several transforms, the priority is used to order them into a sequence. Remember that the first needs to tranform from a datasource to a graph while the subsequent transforms translate from graph to graph."
      },
      "content": [
        {
          "id": "tr:pipelineToEntry"
        },
        {
          "id": "tf:transform"
        }
      ]
    },
    {
      "type": "choice",
      "id": "tr:pipelineToEntry",
      "nodetype": "URI",
      "property": "http://entrystore.org/terms/pipelineToEntry",
      "label": {
        "en": "Optional target entry"
      },
      "description": {
        "": "If a target entry is given, the graph created by the pipeline will be stored in the given entrys (the resource of the entry must be a graph)."
      },
      "cardinality": {
        "min": 0,
        "pref": 1,
        "max": 1
      }
    },
    {
      "type": "group",
      "id": "tr:transformArgument",
      "property": "http://entrystore.org/terms/transformArgument",
      "label": {
        "en": "Transform argument"
      },
      "description": {
        "en": "Each transform argument is a key value pair, available keys and the formatting used in the value is dependent of each transformType, you have to check the documentation externally for each transformType."
      },
      "cardinality": {
        "min": 0,
        "pref": 1
      },
      "content": [
        {
          "id": "tr:transformArgumentKey"
        },
        {
          "id": "tr:transformArgumentValue"
        }
      ]
    },
    {
      "type": "text",
      "nodetype": "ONLY_LITERAL",
      "property": "http://entrystore.org/terms/transformArgumentValue",
      "label": {
        "en": "Value"
      },
      "description": {
        "en": "This is the transform argument value, for example, when the key is 'tarqlstring' the value is a tarql expression as a string (which is a modified SPARQL construct query that references a spreadsheet rather than a graph)."
      },
      "cardinality": {
        "min": 1,
        "pref": 1,
        "max": 1
      },
      "styles": [
        "multiline"
      ],
      "id": "tr:transformArgumentValue"
    }
  ]
}